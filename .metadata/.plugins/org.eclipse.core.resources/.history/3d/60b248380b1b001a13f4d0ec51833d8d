package bostonchildcare.Controller;

import java.awt.Color;
import java.util.Arrays;
import java.util.List;

import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import org.bson.Document;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import com.mongodb.QueryBuilder;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;

import bostonchildcare.View.Enrolled_Students_View;

public class Enrolled_Student_Controller {
	
	static class MyTableModel extends DefaultTableModel {

	    List<Color> rowColours = Arrays.asList(
	        Color.RED,
	        Color.GREEN,
	        Color.CYAN
	    );

	    public void setRowColour(int row, Color c) {
	        rowColours.set(row, c);
	        fireTableRowsUpdated(row, row);
	    }

	    public Color getRowColour(int row) {
	        return rowColours.get(row);
	    }

	    @Override
	    public int getRowCount() {
	        return 3;
	    }

	    @Override
	    public int getColumnCount() {
	        return 3;
	    }

	    @Override
	    public Object getValueAt(int row, int column) {
	        return String.format("%d %d", row, column);
	    }
	}
	
	
private static final Enrolled_Student_Controller instance = new Enrolled_Student_Controller();
private Enrolled_Students_View esview;
private StudentTeacher_Office_Controller st_contr;
private Vaccination_Controller v_contr;
private Login_Controller lcontr;

private Enrolled_Student_Controller() {
	this.esview = Enrolled_Students_View.get_instance();
	load_table(esview.getAge_cat_combo().getSelectedItem().toString());
}

public static Enrolled_Student_Controller get_instance() {
	return instance;
}

public void initController() {
	esview.setVisible(true);
	String age_cat = esview.getAge_cat_combo().getSelectedItem().toString();
	esview.getAge_cat_combo().addActionListener(l->load_table(esview.getAge_cat_combo().getSelectedItem().toString()));
	esview.getBack_btn().addActionListener(l->go_back());
	
	esview.getBtnEnterVaccinationDetails().addActionListener(l->nav_vaccination_details());
}

public void nav_vaccination_details() {
	esview.setVisible(false);
	JTable table = esview.getTable();
	int selected_row = table.getSelectedRow();
	String fname = (String)table.getValueAt(selected_row, 0);
	String lname = (String)table.getValueAt(selected_row, 1);
	v_contr.get_instance().initController(fname,lname);
}

public void load_table(String age_cat) {
	MongoClient client = new MongoClient("localhost",27017);
	DB db = client.getDB("Daycare");
	DBCollection coll = db.getCollection("Student");
	DBObject query = QueryBuilder.start("Section").is("").and("Age Category").is(age_cat).get();
	DBCursor cursor = coll.find(query);
	JTable tab = esview.getTable();
	String[] column = {"First Name","Last Name","Age","Parent's Name","Contact"};
	DefaultTableModel model = new DefaultTableModel(column,0);
	while(cursor.hasNext()) {
		DBObject obj = cursor.next();
		String fname = (String)obj.get("First Name");
		String lname = (String)obj.get("Last Name");
		int age = (Integer)obj.get("Age");
		String pname = (String)obj.get("Parent's Name");
		String contact = (String)obj.get("Contact");
		model.addRow(new Object[] {fname,lname,age,pname,contact});	
	}
	tab.setModel(model);
}

public void go_back() {
	esview.setVisible(false);
	st_contr.get_instance().initController();
}

public void logout() {
	esview.setVisible(false);
	lcontr.get_instance().initController();
}

}
