package bostonchildcare.View;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.EventQueue;
import java.util.Arrays;
import java.util.List;
import java.util.Vector;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

import bostonchildcare.Controller.Enrolled_Student_Controller.MyTableModel;
import bostonchildcare.Model.Student_Model;

//import bostonchildcare.Controller.Enrolled_Student_Controller.MyTableModel;

import javax.swing.JTable;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;

public class Enrolled_Students_View extends JFrame {

	class MyTableModel extends AbstractTableModel {
		   // holds the strings to be displayed in the column headers of our table
		   final String[] columnNames = {"First Name","Last Name","Age","Parent's Name","Contact"};
		  
		   // holds the data types for all our columns
		   final Class[] columnClasses = {String.class, String.class, Integer.class, String.class,String.class};
		  
		   // holds our data
		   final Vector data = new Vector();
		   
		   // adds a row
		   public void addStudent(Student_Model m) {
		      data.addElement(m);
		      fireTableRowsInserted(data.size()-1, data.size()-1);
		   }
		  
		   public int getColumnCount() {
		      return columnNames.length;
		   }
		          
		   public int getRowCount() {
		      return data.size();
		   }
		  
		   public String getColumnName(int col) {
		      return columnNames[col];
		   }
		  
		   public Class getColumnClass(int c) {
		      return columnClasses[c].getClass();
		   }
		  
		   public Object getValueAt(int row, int col) {
		      Student_Model stud = (Student_Model) data.elementAt(row);
		      if (col == 0)      return stud.getFname();
		      else if (col == 1) return stud.getLname();
		      else if (col == 2) return stud.getAge();
		      else if (col == 3) return stud.getPname();
		      else if (col == 4) return stud.getContact();
		      else return null;
		   }
		  
		   public Object getValueAtRow(int row) {
		      Student_Model stu = (Student_Model) data.elementAt(row);
		      return stu;
		   }
		  
		   public boolean isCellEditable(int row, int col) {
		      return false;
		   }
		}
		  
		class MyTableCellRenderer extends DefaultTableCellRenderer {
		   public Component getTableCellRendererComponent(
		            JTable table, Object value, boolean isSelected,
		            boolean hasFocus, int row, int column)
		   {
		      MyTableModel mytm = (MyTableModel) table.getModel();
		      Student_Model stud = (Student_Model) mytm.getValueAtRow(row);
		  
		      if (stud.getAge() > 7) {
		         setBackground(Color.green);
		      }
		      else {
		         setBackground(Color.red);
		      }
		  
		      return super.getTableCellRendererComponent(table, value, isSelected,
		                                                 hasFocus, row, column);
		   }
		}

	private static final Enrolled_Students_View instance = new Enrolled_Students_View();
	private JPanel contentPane;
	private JTable table;
	private JComboBox age_cat_combo;
	private JButton btnEnterVaccinationDetails;
	private JButton back_btn;

	public JTable getTable() {
		return table;
	}

	public JComboBox getAge_cat_combo() {
		return age_cat_combo;
	}

	public JButton getBtnEnterVaccinationDetails() {
		return btnEnterVaccinationDetails;
	}

	public JButton getBack_btn() {
		return back_btn;
	}
	
	public static Enrolled_Students_View get_instance() {
		return instance;
	}

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Enrolled_Students_View frame = new Enrolled_Students_View();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	private Enrolled_Students_View() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 794, 576);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(55, 79, 620, 314);
		contentPane.add(scrollPane);
		
		table = new JTable();
		MyTableModel wineModel = new MyTableModel();
	    table.setModel(wineModel); 
	    for (int i =0; i<wineModel.getColumnCount();i++) {
	         table.setDefaultRenderer(table.getColumnClass(i), new MyTableCellRenderer());
	      }
		scrollPane.setViewportView(table);
		
		back_btn = new JButton("Back");
		back_btn.setBounds(55, 417, 97, 25);
		contentPane.add(back_btn);
		
		btnEnterVaccinationDetails = new JButton("Enter Vaccination Details");
		btnEnterVaccinationDetails.setBounds(487, 417, 193, 25);
		contentPane.add(btnEnterVaccinationDetails);
		
		age_cat_combo = new JComboBox();
		age_cat_combo.setModel(new DefaultComboBoxModel(new String[] {"6-12", "13-24", "25-36", "37-48", "49-60", "61-72"}));
		age_cat_combo.setBounds(55, 35, 618, 22);
		contentPane.add(age_cat_combo);
	}
}
