/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bostonchildcare.Controller;

import Helpers.FieldValidator;
import Helpers.StudentEnrollmentForm_Validation_Helper;
import bostonchildcare.Model.School_Model;
import bostonchildcare.Model.Student_Model;
import bostonchildcare.View.StudentEnrollmentForm_View;
import bostonchildcare.View.Student_Teacher_Selection_View;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;

import org.bson.Document;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;

/**
 *
 * @author amarn
 */
public class StudentEnrollmentForm_Controller{
    private final StudentEnrollmentForm_View studenroll_view;
    private Student_Teacher_Selection_View st_view;
    private Student_Model stud;
    private static final StudentEnrollmentForm_Controller instance = new StudentEnrollmentForm_Controller();

    private StudentEnrollmentForm_Controller( ) {
        this.studenroll_view = StudentEnrollmentForm_View.getInstance();
        studenroll_view.getSubmit_button().addActionListener(l->saveStudentEnrollment_detail());

    }
    
    public static StudentEnrollmentForm_Controller getInstance(){
        return instance;
    }
    
    public void initController(){
        studenroll_view.setVisible(true);
        st_view = Student_Teacher_Selection_View.getinstance();
   }
    
    public void saveStudentEnrollment_detail(){
        
            if(StudentEnrollmentForm_Validation_Helper.validate_form(studenroll_view)){         // a general check to see if all the fields are not empty , if so use the details to create a new student object and save details to it
                stud = new Student_Model();
                if(!FieldValidator.age_validator(Integer.valueOf((studenroll_view.getSage_field().getText().trim().isEmpty())?"0":studenroll_view.getSage_field().getText()))){      //proper age range check
                JOptionPane.showMessageDialog(null,"The age should be within 72 months","Error",JOptionPane.ERROR_MESSAGE);
                studenroll_view.setVisible(false);
                st_view.setVisible(true);
                }else{
                int age = Integer.valueOf(studenroll_view.getSage_field().getText());
                stud.setAge(age);
                }
                if(!FieldValidator.email_Validation(studenroll_view.getContact_field().getText())){                //formatting of e-mail check
                JOptionPane.showMessageDialog(null,"The contact email is not properly formatted","Error",JOptionPane.ERROR_MESSAGE);
                studenroll_view.setVisible(false);
                st_view.setVisible(true);
            
                }else{
                stud.setContact(studenroll_view.getContact_field().getText());
                }
                
                stud.setFname(studenroll_view.getSfname_field().getText());
                stud.setLname(studenroll_view.getSlname_field().getText());
                //stud.setPfname(studenroll_view.getPfname_field().getText());
                //stud.setPlname(studenroll_view.getPlname_field().getText());
                School_Model.get_instance().getUnenrolled_student_list().add(stud);
                MongoClientURI uri = new MongoClientURI(
                	    "mongodb+srv://amar:mathisfun@mydaycare-i8kor.mongodb.net/test?retryWrites=true&w=majority");
                MongoClient mongoclient = new MongoClient(uri);
                MongoDatabase db = mongoclient.getDatabase("Mongobackup");
                MongoCollection<Document> coll = db.getCollection("Student");
                Document doc = new Document();
                doc.append("First Name",stud.getFname());
                doc.append("Last Name",stud.getLname());
                doc.append("Age",stud.getAge());
                doc.append("Section","");
                //doc.append("Parent's Name",stud.getPfname()+" "+stud.getPlname());
                doc.append("Contact",stud.getContact());
                coll.insertOne(doc);
                
                
                studenroll_view.setVisible(false);
                studenroll_view.getSage_field().setValue("");
                studenroll_view.getSfname_field().setText("");
                studenroll_view.getSlname_field().setText("");
                studenroll_view.getPfname_field().setText("");
                studenroll_view.getPlname_field().setText("");
                studenroll_view.getContact_field().setText("");
         
                st_view.setVisible(true);
                mongoclient.close();
            }
            
            
        
    }


    
}
